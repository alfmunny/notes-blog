<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Reading Hands on ML</title>
      <link href="/notes-blog/2020/10/01/reading-hands-on-ml/"/>
      <url>/notes-blog/2020/10/01/reading-hands-on-ml/</url>
      
        <content type="html"><![CDATA[<p>Want to finish this <a href="https://github.com/ageron/handson-ml2" target="_blank" rel="noopener">ml book</a> for the n-th time.<br>I’m just gonna record it this time.  The code and progress can also be found <a href="https://github.com/alfmunny/Hands-On-Machine-Learning" target="_blank" rel="noopener">here</a>.</p><p>Let’s keep it up.</p><h2 id="Day-2"><a href="#Day-2" class="headerlink" title="Day 2"></a>Day 2</h2><p>Nothing done for the book. Wrote some cheatsheet in the github.</p><h2 id="Day-1"><a href="#Day-1" class="headerlink" title="Day 1"></a>Day 1</h2><p>Finished the first 4 Chapters two weeks before. Linear Regression, gradient decent, Logistic Regression, all basics.<br>The End-to-End project is pretty helpful. Grid Search is very efficient for tweaking the parameters.</p>]]></content>
      
      
      <categories>
          
          <category> posts </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Fluent Python - Chapter 1. The Python Data Model</title>
      <link href="/notes-blog/2020/05/02/Chapter-1-The-Python-Data-Model/"/>
      <url>/notes-blog/2020/05/02/Chapter-1-The-Python-Data-Model/</url>
      
        <content type="html"><![CDATA[<p>You can think of the data model as a description of Python as a framework. It formalizes the interfaces of the building blocks of the language itself, such as sequences, iterators, functions, classes, context managers, and so on.</p><h2 id="A-Pythonic-Card-Deck"><a href="#A-Pythonic-Card-Deck" class="headerlink" title="A Pythonic Card Deck"></a>A Pythonic Card Deck</h2><p>Special methods: <code>__getitem__</code> and <code>__len__</code>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> collections</span><br><span class="line"></span><br><span class="line">Card = collections.namedtuple(<span class="string">&#x27;Card&#x27;</span>, [<span class="string">&#x27;rank&#x27;</span>, <span class="string">&#x27;suit&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FrenchDeck</span>:</span></span><br><span class="line">    ranks = [<span class="built_in">str</span>(n) <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="number">11</span>)] + <span class="built_in">list</span>(<span class="string">&#x27;JQKA&#x27;</span>)</span><br><span class="line">    suits = <span class="string">&#x27;spades diamonds clubs hearts&#x27;</span>.split()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self._cards = [Card(rank, suit) <span class="keyword">for</span> suit <span class="keyword">in</span> self.suits <span class="keyword">for</span> rank <span class="keyword">in</span> self.ranks]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__len__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(self._cards)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__getitem__</span>(<span class="params">self, position</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self._cards[position]</span><br></pre></td></tr></table></figure><p><code>nametuple</code> can be used to build classes of objects that are just bundles of attributes with no custom methods.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">beer_card = Card(<span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;diamonds&#x27;</span>)</span><br><span class="line">beer_card</span><br></pre></td></tr></table></figure><p><code>len()</code> function returns the number of cards in it.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">deck = FrenchDeck()</span><br><span class="line"><span class="built_in">len</span>(deck)</span><br></pre></td></tr></table></figure><p>index operation, provided by <code>__getitem__</code> method.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deck[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><pre><code>Card(rank=&#39;2&#39;, suit=&#39;spades&#39;)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deck[-<span class="number">1</span>]</span><br></pre></td></tr></table></figure><pre><code>Card(rank=&#39;A&#39;, suit=&#39;hearts&#39;)</code></pre><p>Get a random item from a sequence</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> choice</span><br><span class="line">choice(deck)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">choice(deck)</span><br></pre></td></tr></table></figure><pre><code>Card(rank=&#39;9&#39;, suit=&#39;hearts&#39;)</code></pre><p>Slicing support, because <code>__getitem__</code> delegates to the [] oeprator of <code>self._cards</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deck[:<span class="number">3</span>]</span><br></pre></td></tr></table></figure><pre><code>[Card(rank=&#39;2&#39;, suit=&#39;spades&#39;), Card(rank=&#39;3&#39;, suit=&#39;spades&#39;), Card(rank=&#39;4&#39;, suit=&#39;spades&#39;)]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deck[<span class="number">12</span>::<span class="number">13</span>]</span><br></pre></td></tr></table></figure><pre><code>[Card(rank=&#39;A&#39;, suit=&#39;spades&#39;), Card(rank=&#39;A&#39;, suit=&#39;diamonds&#39;), Card(rank=&#39;A&#39;, suit=&#39;clubs&#39;), Card(rank=&#39;A&#39;, suit=&#39;hearts&#39;)]</code></pre><p><code>__getitem__</code> method make the deck iterable</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> card <span class="keyword">in</span> deck:</span><br><span class="line">    print(card)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Card(rank=<span class="string">&#x27;2&#x27;</span>, suit=<span class="string">&#x27;spades&#x27;</span>)</span><br><span class="line">Card(rank=<span class="string">&#x27;3&#x27;</span>, suit=<span class="string">&#x27;spades&#x27;</span>)</span><br><span class="line">Card(rank=<span class="string">&#x27;4&#x27;</span>, suit=<span class="string">&#x27;spades&#x27;</span>)</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>Iterated in reverse</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> card <span class="keyword">in</span> <span class="built_in">reversed</span>(deck):</span><br><span class="line">    print(card)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Card(rank=<span class="string">&#x27;A&#x27;</span>, suit=<span class="string">&#x27;hearts&#x27;</span>)</span><br><span class="line">Card(rank=<span class="string">&#x27;K&#x27;</span>, suit=<span class="string">&#x27;hearts&#x27;</span>)</span><br><span class="line">Card(rank=<span class="string">&#x27;Q&#x27;</span>, suit=<span class="string">&#x27;hearts&#x27;</span>)</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>If a collection has no <code>__contains__</code>, the <code>in</code> oeprator does a sequential scan.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Card(<span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;hearts&#x27;</span>) <span class="keyword">in</span> deck</span><br></pre></td></tr></table></figure><pre><code>True</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Card(<span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;beasts&#x27;</span>) <span class="keyword">in</span> deck</span><br></pre></td></tr></table></figure><pre><code>False</code></pre><p>Sorting</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">suit_values = <span class="built_in">dict</span>(spades=<span class="number">3</span>, hearts=<span class="number">2</span>, diamonds=<span class="number">1</span>, clubs=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">spades_high</span>(<span class="params">card</span>):</span></span><br><span class="line">    rank_value = FrenchDeck.ranks.index(card.rank)</span><br><span class="line">    <span class="keyword">return</span> rank_value * <span class="built_in">len</span>(suit_values) + suit_values[card.suit]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> card <span class="keyword">in</span> <span class="built_in">sorted</span>(deck, key=spades_high):</span><br><span class="line">    print(card)</span><br></pre></td></tr></table></figure><pre><code>Card(rank=&#39;2&#39;, suit=&#39;clubs&#39;)Card(rank=&#39;2&#39;, suit=&#39;diamonds&#39;)Card(rank=&#39;2&#39;, suit=&#39;hearts&#39;)...</code></pre><h2 id="How-Special-Methods-Are-Used"><a href="#How-Special-Methods-Are-Used" class="headerlink" title="How Special Methods Are Used"></a>How Special Methods Are Used</h2><p>Special methods are meant to be called by Python intepreter, and not by you. You don’t write <code>my_object.__len__()</code>. You write len(my_object) and, then Python calls the <code>__len__</code> instance method you implemented.</p><p><code>i in x:</code> invocates <code>iter(x)</code>, which in turn may call <code>x.__iter()</code> if that is available.</p><p>It is usually bette to call the relted built-in function, len, iter, str, etc. These built-ins call the corresponding special method.</p><h3 id="Emulatin-Numeric-Types"><a href="#Emulatin-Numeric-Types" class="headerlink" title="Emulatin Numeric Types"></a>Emulatin Numeric Types</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> hypot</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Vector</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, x, y</span>):</span></span><br><span class="line">        self.x = x</span><br><span class="line">        self.y = y</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Vector(%r, %r)&quot;</span> % (self.x, self.y)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__bool__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">bool</span>(<span class="built_in">abs</span>(self))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__add__</span>(<span class="params">self, other</span>):</span></span><br><span class="line">        x = self.x + other.x</span><br><span class="line">        y = self.y + other.y</span><br><span class="line">        <span class="keyword">return</span> Vector(x, y)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__abs__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> hypot(self.x, self.y)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__mul__</span>(<span class="params">self, scalar</span>):</span></span><br><span class="line">        <span class="keyword">return</span> Vector(self.x * scalar, self.y * scalar)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">v1 = Vector(<span class="number">4</span>, <span class="number">1</span>)</span><br><span class="line">v2 = Vector(<span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">v1 + v2</span><br></pre></td></tr></table></figure><pre><code>Vector(7, 5)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">v = Vector(<span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line"><span class="built_in">abs</span>(v)</span><br></pre></td></tr></table></figure><pre><code>5.0</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v * <span class="number">3</span></span><br></pre></td></tr></table></figure><pre><code>Vector(9, 12)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">abs</span>(v * <span class="number">3</span>)</span><br></pre></td></tr></table></figure><pre><code>15.0</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bool</span>(v)</span><br></pre></td></tr></table></figure><pre><code>True</code></pre><h3 id="String-Representation"><a href="#String-Representation" class="headerlink" title="String Representation"></a>String Representation</h3><p>Use %r to obtain the standard representation</p><p><code>str()</code> will call <code>__repr__</code> as a fallback, if <code>__str__</code> is not available.</p><p><code>__repr</code> is to be unambiguous.</p><p><code>__str__</code> is to be readable.</p><h3 id="Arithmetic-Operators"><a href="#Arithmetic-Operators" class="headerlink" title="Arithmetic Operators"></a>Arithmetic Operators</h3><p><code>__add__</code> and <code>__mul__</code> return new instance, not touching either operand.</p><h3 id="Boolean-Value-of-a-Custom-Type"><a href="#Boolean-Value-of-a-Custom-Type" class="headerlink" title="Boolean Value of a Custom Type"></a>Boolean Value of a Custom Type</h3><p>Here we return the magnitude of the vector.</p><p><code>bool(x)</code> calls <code>x.__bool__()</code>. If <code>x.__bool__()</code> is not implemented, call <code>x.__len__()</code>, zero returns False. Otherwise bool returns True.</p><h2 id="Overview-of-Special-Methods"><a href="#Overview-of-Special-Methods" class="headerlink" title="Overview of Special Methods"></a>Overview of Special Methods</h2><p>Table 1-1. Special method names (operators excluded)</p><table><thead><tr><th>Category</th><th>Method names</th></tr></thead><tbody><tr><td>String/bytes representation</td><td>__repr__, <span class="underline"><span class="underline">str</span></span>, <span class="underline"><span class="underline">format</span></span>, <span class="underline"><span class="underline">bytes</span></span></td></tr><tr><td>Conversion to number</td><td>__abs__, <span class="underline"><span class="underline">bool</span></span>, <span class="underline"><span class="underline">complex</span></span>, <span class="underline"><span class="underline">init_</span></span>, <span class="underline"><span class="underline">float</span></span>, <span class="underline"><span class="underline">hash</span></span>, <span class="underline"><span class="underline">index</span></span></td></tr><tr><td>Emulating collections</td><td>__len__, <span class="underline"><span class="underline">getitem</span></span>, setitem__, <span class="underline"><span class="underline">delitem</span></span>, <span class="underline"><span class="underline">contains</span></span>, <span class="underline"><span class="underline">iter</span></span>, <span class="underline"><span class="underline">reversed</span></span> <span class="underline"><span class="underline">next</span></span></td></tr><tr><td>Iteration</td><td>__iter__, <span class="underline"><span class="underline">reversed</span></span>, <span class="underline"><span class="underline">next</span></span></td></tr><tr><td>Emulating callables</td><td>__call__</td></tr><tr><td>Context management</td><td>__enter__, <span class="underline"><span class="underline">exit</span></span></td></tr><tr><td>Instance creation and destruction</td><td>__new__, <span class="underline"><span class="underline">init</span></span>, <span class="underline"><span class="underline">del</span></span></td></tr><tr><td>Attribute management</td><td>__getattr__, getattribute__, <span class="underline"><span class="underline">setattr</span></span>, <span class="underline"><span class="underline">delattr</span></span>, <span class="underline"><span class="underline">dir</span></span></td></tr><tr><td>Attribute descriptors</td><td>__get__, <span class="underline"><span class="underline">set</span></span>, <span class="underline"><span class="underline">delete</span></span></td></tr><tr><td>Class services</td><td>__prepare__, <span class="underline"><span class="underline">instancecheck</span></span>, <span class="underline"><span class="underline">subclasscheck</span></span></td></tr></tbody></table><p>Table 1-2. Special method names for operators</p><table><thead><tr><th>Category</th><th>Method names and related oeprators</th></tr></thead><tbody><tr><td>Unary numeric operators</td><td>__neg__, <span class="underline"><span class="underline">pos</span></span>, <span class="underline"><span class="underline">abs</span></span></td></tr><tr><td>Rich comparison operators</td><td>__lt__&gt;, <span class="underline"><span class="underline">le__&lt;=, __eq__==, __ne</span></span>!=, __gt__&gt;, __ge__&gt;=</td></tr><tr><td>Arithmeric operators</td><td>__add__+, <span class="underline"><span class="underline">sub</span></span>-, __mul__*, __truediv__/, __floordiv__//, __mod__%, __divmod__divmod() __pow__** or pow(), __round__round()</td></tr><tr><td>Reversed arithmeric operators</td><td>__radd__, <span class="underline"><span class="underline">rsub</span></span>, <span class="underline"><span class="underline">rmul</span></span>, <span class="underline"><span class="underline">rtruediv</span></span>, <span class="underline"><span class="underline">rfloordiv</span></span>, <span class="underline"><span class="underline">rmode</span></span>, <span class="underline"><span class="underline">rdivmod</span></span>, <span class="underline"><span class="underline">rpow</span></span></td></tr><tr><td>Augmented assignment arithmeric operators</td><td>__iadd__, <span class="underline"><span class="underline">isub</span></span>, <span class="underline"><span class="underline">imul</span></span>, <span class="underline"><span class="underline">itrediv</span></span>, <span class="underline"><span class="underline">ifloordiv</span></span>, <span class="underline"><span class="underline">imod</span></span>, <span class="underline"><span class="underline">ipow</span></span></td></tr><tr><td>Bitwise operators</td><td>__invert__~, <span class="underline"><span class="underline">lshift__<a id="orgb3e5d32"></a>, __and__&amp;, __or</span></span>, __xor__^</td></tr><tr><td>Reversed Bitwise operators</td><td>__rlshift__, <span class="underline"><span class="underline">rrshift</span></span>, <span class="underline"><span class="underline">rand</span></span>, <span class="underline"><span class="underline">ror</span></span>, <span class="underline"><span class="underline">rxor</span></span></td></tr><tr><td>Augmented Bitwise operators</td><td>__ilshift__, <span class="underline"><span class="underline">irshift</span></span>, <span class="underline"><span class="underline">iand</span></span>, <span class="underline"><span class="underline">ior</span></span>, <span class="underline"><span class="underline">ixor</span></span></td></tr></tbody></table><h2 id="Why-len-Is-Not-a-Method"><a href="#Why-len-Is-Not-a-Method" class="headerlink" title="Why len Is Not a Method"></a>Why len Is Not a Method</h2><blockquote><p>“The Zen of Python”: “Practicality beats purity”</p></blockquote><p><code>len(x)</code> reads from a filed in a C struct of CPython, when x is a built-in type.</p><p>You can still customize it through <code>__len__</code>.</p>]]></content>
      
      
      <categories>
          
          <category> Book Notes </category>
          
          <category> Fluent Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Fluent Python - Chapter 2. An Array of Sequences</title>
      <link href="/notes-blog/2020/05/02/Chapter-2-An-Array-of-Sequences/"/>
      <url>/notes-blog/2020/05/02/Chapter-2-An-Array-of-Sequences/</url>
      
        <content type="html"><![CDATA[<p>Container sequences: can hold different types. They contain references to the objects.</p><blockquote><p>list, tuple, collections.deque</p></blockquote><p>Flat sequences: can hold one type. They physically sotre the value.</p><blockquote><p>str, bytes, bytearray, memoryview, array.array</p></blockquote><p>Another way of grouping:</p><p>Mutable seuqences:</p><blockquote><p>list, byte, array.array, collections.deque and memoryview</p></blockquote><p>Immutable sequences:</p><blockquote><p>tuple, str, bytes</p></blockquote><h2 id="List-Comprehensions-and-Generator-Expressions"><a href="#List-Comprehensions-and-Generator-Expressions" class="headerlink" title="List Comprehensions and Generator Expressions"></a>List Comprehensions and Generator Expressions</h2><p><strong>Readability</strong></p><p>List comprehension is meant to do one thing only: to build a new list. It is possible to abuse it to write very incomprehensible code, you should avoid it.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">symbols = <span class="string">&#x27;$¢£¥€¤&#x27;</span></span><br><span class="line">codes = [<span class="built_in">ord</span>(symbol) <span class="keyword">for</span> symbol <span class="keyword">in</span> symbols]</span><br><span class="line">codes</span><br></pre></td></tr></table></figure><pre><code>[36, 162, 163, 165, 8364, 164]</code></pre><p>No leak in Python 3</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="string">&#x27;ABC&#x27;</span></span><br><span class="line">dummy = [<span class="built_in">ord</span>(x) <span class="keyword">for</span> x <span class="keyword">in</span> x]</span><br><span class="line">x</span><br></pre></td></tr></table></figure><pre><code>&#39;ABC&#39;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dummy</span><br></pre></td></tr></table></figure><pre><code>[65, 66, 67]</code></pre><p><strong>Versus map and filter</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">beyond_ascii = [<span class="built_in">ord</span>(s) <span class="keyword">for</span> s <span class="keyword">in</span> symbols <span class="keyword">if</span> <span class="built_in">ord</span>(s) &gt; <span class="number">127</span>]</span><br><span class="line">beyond_ascii</span><br></pre></td></tr></table></figure><pre><code>[162, 163, 165, 8364, 164]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">beyond_ascii = <span class="built_in">list</span>(<span class="built_in">filter</span>(<span class="keyword">lambda</span> c: c &gt; <span class="number">127</span>, <span class="built_in">map</span>(<span class="built_in">ord</span>, symbols)))</span><br><span class="line">beyond_ascii</span><br></pre></td></tr></table></figure><pre><code>[162, 163, 165, 8364, 164]</code></pre><p><strong>Cartesian Products</strong></p><p>Multiple Loops</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">colors = [<span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;white&#x27;</span>]</span><br><span class="line">sizes = [<span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;L&#x27;</span>]</span><br><span class="line">tshirts = [(color, size) <span class="keyword">for</span> color <span class="keyword">in</span> colors <span class="keyword">for</span> size <span class="keyword">in</span> sizes]</span><br><span class="line">tshirts</span><br></pre></td></tr></table></figure><pre><code>[(&#39;black&#39;, &#39;S&#39;), (&#39;black&#39;, &#39;M&#39;), (&#39;black&#39;, &#39;L&#39;), (&#39;white&#39;, &#39;S&#39;), (&#39;white&#39;, &#39;M&#39;), (&#39;white&#39;, &#39;L&#39;)]</code></pre><p>We can also arrange them by size</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">colors = [<span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;white&#x27;</span>]</span><br><span class="line">sizes = [<span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;L&#x27;</span>]</span><br><span class="line">tshirts = [(color, size) <span class="keyword">for</span> size <span class="keyword">in</span> sizes <span class="keyword">for</span> color <span class="keyword">in</span> colors]</span><br><span class="line">tshirts</span><br></pre></td></tr></table></figure><pre><code>[(&#39;black&#39;, &#39;S&#39;), (&#39;white&#39;, &#39;S&#39;), (&#39;black&#39;, &#39;M&#39;), (&#39;white&#39;, &#39;M&#39;), (&#39;black&#39;, &#39;L&#39;), (&#39;white&#39;, &#39;L&#39;)]</code></pre><p><strong>Generator Expressions</strong> To initialize tuples, arrays, and other tyoes of sequences, you can use Generator Expressions (genexps).</p><p>Genexps saves memory because it yields items one by one.</p><p>Generator Expressions use the same syntax as list comprehension, but are enclosed in parentheses rather than brackets.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">symobls = <span class="string">&#x27;$¢£¥€¤&#x27;</span></span><br><span class="line"><span class="built_in">tuple</span>(<span class="built_in">ord</span>(symbol) <span class="keyword">for</span> symbol <span class="keyword">in</span> symbols)</span><br></pre></td></tr></table></figure><pre><code>(36, 162, 163, 165, 8364, 164)</code></pre><p>If you have millions of items, only to feed the loop, genexp can save the expense of building a list for that.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">colors = [<span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;white&#x27;</span>]</span><br><span class="line">sizes = [<span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;L&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> tshirt <span class="keyword">in</span> (<span class="string">&#x27;%s %s&#x27;</span> % (c, s) <span class="keyword">for</span> c <span class="keyword">in</span> colors <span class="keyword">for</span> s <span class="keyword">in</span> sizes):</span><br><span class="line">    print(tshirt)</span><br></pre></td></tr></table></figure><pre><code>black Sblack Mblack Lwhite Swhite Mwhite L</code></pre><h2 id="Tuples-Ate-Not-Just-Immutable-Lists"><a href="#Tuples-Ate-Not-Just-Immutable-Lists" class="headerlink" title="Tuples Ate Not Just Immutable Lists"></a>Tuples Ate Not Just Immutable Lists</h2><p>Tuples do double duty:</p><ol><li> immutable lists</li><li> as records with no field names</li></ol><h3 id="Tuple-as-Records"><a href="#Tuple-as-Records" class="headerlink" title="Tuple as Records"></a>Tuple as Records</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">lax_coordinates = (<span class="number">33.9425</span>, -<span class="number">118.408056</span>)</span><br><span class="line">city, year, pop, chg, area = (<span class="string">&#x27;Tokyo&#x27;</span>, <span class="number">2003</span>, <span class="number">32450</span>, <span class="number">0.66</span>, <span class="number">8014</span>)</span><br><span class="line">traveler_ids = [(<span class="string">&#x27;USA&#x27;</span>, <span class="string">&#x27;31195855&#x27;</span>), (<span class="string">&#x27;BRA&#x27;</span>, <span class="string">&#x27;CE342567&#x27;</span>), (<span class="string">&#x27;ESP&#x27;</span>, <span class="string">&#x27;XDA205856&#x27;</span>)]</span><br><span class="line"><span class="keyword">for</span> passport <span class="keyword">in</span> <span class="built_in">sorted</span>(traveler_ids):</span><br><span class="line">    print(<span class="string">&quot;%s/%s&quot;</span> % passport)</span><br></pre></td></tr></table></figure><pre><code>BRA/CE342567ESP/XDA205856USA/31195855</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> country, _ <span class="keyword">in</span> traveler_ids:</span><br><span class="line">    print(country)</span><br></pre></td></tr></table></figure><pre><code>USABRAESP</code></pre><h3 id="Tuple-Unpacking"><a href="#Tuple-Unpacking" class="headerlink" title="Tuple Unpacking"></a>Tuple Unpacking</h3><p><strong>parallel assignment</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lax_coordinates = (<span class="number">33.9425</span>, -<span class="number">118.408056</span>)</span><br><span class="line">latitude, longitude = lax_coordinates</span><br><span class="line">latitude</span><br></pre></td></tr></table></figure><pre><code>33.9425</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">longitude</span><br></pre></td></tr></table></figure><pre><code>-118.408056</code></pre><p><strong>swap</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br><span class="line">b = <span class="number">2</span></span><br><span class="line">b, a = a, b</span><br><span class="line">print(a, b)</span><br></pre></td></tr></table></figure><pre><code>2 1</code></pre><p><strong>Prefixing an argument with a start</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">divmod</span>(<span class="number">20</span>, <span class="number">8</span>) </span><br></pre></td></tr></table></figure><pre><code>(2, 4)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">t = (<span class="number">20</span>, <span class="number">8</span>)</span><br><span class="line"><span class="built_in">divmod</span>(*t)</span><br></pre></td></tr></table></figure><pre><code>(2, 4)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">quotient, remainder = <span class="built_in">divmod</span>(*t)</span><br><span class="line">quotient, remainder</span><br></pre></td></tr></table></figure><pre><code>(2, 4)</code></pre><p><strong>Focus on certain part</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">_, filename = os.path.split(<span class="string">&#x27;/home/luciano/.ssh/idrsa.pub&#x27;</span>)</span><br><span class="line">filename</span><br></pre></td></tr></table></figure><pre><code>&#39;idrsa.pub&#39;</code></pre><p><strong>Using * to grab excess items</strong></p><p>Without a *, it ignore the rest elements while unpacking.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a, b, rest = <span class="built_in">range</span>(<span class="number">5</span>)</span><br><span class="line">a, b, rest</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a, b, *rest = <span class="built_in">range</span>(<span class="number">5</span>)</span><br><span class="line">a, b, rest</span><br></pre></td></tr></table></figure><pre><code>(0, 1, [2, 3, 4])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a,  b, *rest = <span class="built_in">range</span>(<span class="number">3</span>)</span><br><span class="line">a, b, rest</span><br></pre></td></tr></table></figure><pre><code>(0, 1, [2])</code></pre><p>Any place</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a, *body, c, d = <span class="built_in">range</span>(<span class="number">5</span>)</span><br><span class="line">a, body, c, d</span><br></pre></td></tr></table></figure><pre><code>(0, [1, 2], 3, 4)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*head, b, c, d = <span class="built_in">range</span>(<span class="number">5</span>)</span><br><span class="line">head, b, c, d</span><br></pre></td></tr></table></figure><pre><code>([0, 1], 2, 3, 4)</code></pre><h3 id="Nested-Tuple-Unpacking"><a href="#Nested-Tuple-Unpacking" class="headerlink" title="Nested Tuple Unpacking"></a>Nested Tuple Unpacking</h3><p>Unpacking nested tuple, like (a, b, (c, d))</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">metro_areas = [</span><br><span class="line">    (<span class="string">&#x27;Tokyo&#x27;</span>, <span class="string">&#x27;JP&#x27;</span>, <span class="number">36.933</span>, (<span class="number">35.689722</span>, <span class="number">139.691667</span>)),</span><br><span class="line">    (<span class="string">&#x27;Delhi NCR&#x27;</span>, <span class="string">&#x27;IN&#x27;</span>, <span class="number">21.935</span>, (<span class="number">28.613889</span>, <span class="number">77.208889</span>)),</span><br><span class="line">    (<span class="string">&#x27;Mexico City&#x27;</span>, <span class="string">&#x27;MX&#x27;</span>, <span class="number">20.142</span>, (<span class="number">19.433333</span>, -<span class="number">99.133333</span>)),</span><br><span class="line">    (<span class="string">&#x27;New York-Newark&#x27;</span>, <span class="string">&#x27;US&#x27;</span>, <span class="number">20.104</span>, (<span class="number">40.808611</span>, -<span class="number">74.020386</span>)),</span><br><span class="line">    (<span class="string">&#x27;Sao Paulo&#x27;</span>, <span class="string">&#x27;BR&#x27;</span>, <span class="number">19.649</span>, (-<span class="number">23.547778</span>, -<span class="number">46.635833</span>)),</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;&#123;:15&#125; | &#123;:^9&#125; | &#123;:^9&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;lat.&#x27;</span>, <span class="string">&#x27;long.&#x27;</span>))</span><br><span class="line">fmt = <span class="string">&#x27;&#123;:15&#125; | &#123;:9.4f&#125; | &#123;:9.4f&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> name, cc, pop, (latitude, longitude) <span class="keyword">in</span> metro_areas:</span><br><span class="line">    <span class="keyword">if</span> longitude &lt;= <span class="number">0</span>:</span><br><span class="line">        print(fmt.<span class="built_in">format</span>(name, latitude, longitude))</span><br></pre></td></tr></table></figure><pre><code>                |   lat.    |   long.  Mexico City     |   19.4333 |  -99.1333New York-Newark |   40.8086 |  -74.0204Sao Paulo       |  -23.5478 |  -46.6358</code></pre><h3 id="Named-Tuples"><a href="#Named-Tuples" class="headerlink" title="Named Tuples"></a>Named Tuples</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> namedtuple</span><br><span class="line">City = namedtuple(<span class="string">&#x27;City&#x27;</span>, <span class="string">&#x27;name country population coordinates&#x27;</span>)</span><br><span class="line">tokyo = City(<span class="string">&#x27;Tokyo&#x27;</span>, <span class="string">&#x27;JP&#x27;</span>, <span class="number">36.933</span>, (<span class="number">35.689722</span>, <span class="number">139.691667</span>))</span><br><span class="line">tokyo</span><br></pre></td></tr></table></figure><pre><code>City(name=&#39;Tokyo&#39;, country=&#39;JP&#39;, population=36.933, coordinates=(35.689722, 139.691667))</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tokyo.population</span><br></pre></td></tr></table></figure><pre><code>36.933</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tokyo.coordinates</span><br></pre></td></tr></table></figure><pre><code>(35.689722, 139.691667)</code></pre><p>Named tuple attributes</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">City._fields</span><br></pre></td></tr></table></figure><pre><code>(&#39;name&#39;, &#39;country&#39;, &#39;population&#39;, &#39;coordinates&#39;)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">LatLong = namedtuple(<span class="string">&#x27;LatLong&#x27;</span>, <span class="string">&#x27;lat long&#x27;</span>)</span><br><span class="line">delhi_data = (<span class="string">&#x27;Delhi NCR&#x27;</span>, <span class="string">&#x27;IN&#x27;</span>, <span class="number">21.935</span>, LatLong(<span class="number">28.613889</span>, <span class="number">77.208889</span>))</span><br><span class="line">delhi = City._make(delhi_data)</span><br><span class="line">delhi._asdict()</span><br></pre></td></tr></table></figure><pre><code>&#123;&#39;coordinates&#39;: LatLong(lat=28.613889, long=77.208889), &#39;country&#39;: &#39;IN&#39;, &#39;name&#39;: &#39;Delhi NCR&#39;, &#39;population&#39;: 21.935&#125;</code></pre><p>You can also use *.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">delhi = City(*delhi_data)</span><br><span class="line">delhi</span><br></pre></td></tr></table></figure><pre><code>City(name=&#39;Delhi NCR&#39;, country=&#39;IN&#39;, population=21.935, coordinates=LatLong(lat=28.613889, long=77.208889))</code></pre><h3 id="Tuple-as-Immutable-Lists"><a href="#Tuple-as-Immutable-Lists" class="headerlink" title="Tuple as Immutable Lists"></a>Tuple as Immutable Lists</h3><p>Tuple supports all list methods that do not involve adding or removing items, like</p><blockquote><p>s.__iadd__, s.__append__. s.clear(), s.copy(), s.__delitem__, s.__insert__, s.__imul__, s.__reversed__()</p></blockquote><p>reversed(tuple) works without s.__reversed__. (list has it only for optimization)</p><h2 id="Slicing"><a href="#Slicing" class="headerlink" title="Slicing"></a>Slicing</h2><p>s[a:b:c]: a to b with a c stride.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&#x27;bicycle&#x27;</span></span><br><span class="line">s[::<span class="number">3</span>]</span><br></pre></td></tr></table></figure><pre><code>&#39;bye&#39;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s[::-<span class="number">1</span>]</span><br></pre></td></tr></table></figure><pre><code>&#39;elcycib&#39;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s[::-<span class="number">2</span>]</span><br></pre></td></tr></table></figure><pre><code>&#39;eccb&#39;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">l = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">10</span>))</span><br><span class="line">l</span><br></pre></td></tr></table></figure><pre><code>[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">l[<span class="number">2</span>:<span class="number">5</span>] = [<span class="number">20</span>, <span class="number">30</span>]</span><br><span class="line">l</span><br></pre></td></tr></table></figure><pre><code>[0, 1, 20, 30, 5, 6, 7, 8, 9]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">del</span> l[<span class="number">5</span>:<span class="number">7</span>]</span><br><span class="line">l</span><br></pre></td></tr></table></figure><pre><code>[0, 1, 20, 30, 5, 8, 9]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">l[<span class="number">3</span>::<span class="number">2</span>] = [<span class="number">11</span>, <span class="number">22</span>]</span><br><span class="line">l</span><br></pre></td></tr></table></figure><pre><code>[0, 1, 20, 11, 5, 22, 9]</code></pre><p>The value must be a iterable</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">l[<span class="number">2</span>:<span class="number">5</span>] = <span class="number">100</span></span><br><span class="line">l</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">l[<span class="number">2</span>:<span class="number">5</span>] = [<span class="number">100</span>]</span><br><span class="line">l</span><br></pre></td></tr></table></figure><pre><code>[0, 1, 100, 22, 9]</code></pre><h2 id="Using-and-with-Sequences"><a href="#Using-and-with-Sequences" class="headerlink" title="Using + and * with Sequences"></a>Using + and * with Sequences</h2><p>How to create list of lists?</p><p>Wrong way</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">weird_board = [[<span class="string">&#x27;_&#x27;</span>] * <span class="number">3</span>] * <span class="number">3</span> <span class="comment"># The same reference got added 3 times</span></span><br><span class="line">weird_board</span><br></pre></td></tr></table></figure><pre><code>[[&#39;_&#39;, &#39;_&#39;, &#39;_&#39;], [&#39;_&#39;, &#39;_&#39;, &#39;_&#39;], [&#39;_&#39;, &#39;_&#39;, &#39;_&#39;]]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">weird_board[<span class="number">1</span>][<span class="number">2</span>] = <span class="string">&#x27;O&#x27;</span></span><br><span class="line">weird_board</span><br></pre></td></tr></table></figure><pre><code>[[&#39;_&#39;, &#39;_&#39;, &#39;O&#39;], [&#39;_&#39;, &#39;_&#39;, &#39;O&#39;], [&#39;_&#39;, &#39;_&#39;, &#39;O&#39;]]</code></pre><p>Right way</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">board = [[<span class="string">&#x27;_&#x27;</span>] * <span class="number">3</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>)]</span><br><span class="line">board</span><br></pre></td></tr></table></figure><pre><code>[[&#39;_&#39;, &#39;_&#39;, &#39;_&#39;], [&#39;_&#39;, &#39;_&#39;, &#39;_&#39;], [&#39;_&#39;, &#39;_&#39;, &#39;_&#39;]]</code></pre><h2 id="Augmented-Assignment-with-Sequences"><a href="#Augmented-Assignment-with-Sequences" class="headerlink" title="Augmented Assignment with Sequences"></a>Augmented Assignment with Sequences</h2><p>+= : <code>__iadd__</code>, in-place add</p><p>*= : <code>__imul__</code>, in-place multiply</p><h3 id="Puzzle"><a href="#Puzzle" class="headerlink" title="Puzzle"></a>Puzzle</h3><p>What happend next?</p><ol><li> Error</li><li> Or success</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">t = (<span class="number">1</span>, <span class="number">2</span>, [<span class="number">30</span>, <span class="number">40</span>])</span><br><span class="line">t[<span class="number">2</span>] += [<span class="number">50</span>, <span class="number">60</span>]</span><br></pre></td></tr></table></figure><p>Answer: Both happened</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: <span class="string">&#x27;tuple&#x27;</span> <span class="built_in">object</span> does <span class="keyword">not</span> support item assignment</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">t</span><br></pre></td></tr></table></figure><pre><code>(1, 2, [30, 40, 50, 60])</code></pre><p>Look at bytecode</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> dis</span><br><span class="line">dis.dis(<span class="string">&#x27;s[a] += b&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1           0 LOAD_NAME                0 (s)</span><br><span class="line">            2 LOAD_NAME                1 (a)</span><br><span class="line">            4 DUP_TOP_TWO</span><br><span class="line">            6 BINARY_SUBSCR                         1</span><br><span class="line">            8 LOAD_NAME                2 (b)</span><br><span class="line">           10 INPLACE_ADD                           2</span><br><span class="line">           12 ROT_THREE</span><br><span class="line">           14 STORE_SUBSCR                          3</span><br><span class="line">           16 LOAD_CONST               0 (None)</span><br><span class="line">           18 RETURN_VALU</span><br></pre></td></tr></table></figure><ol><li> Put the value of s[a] on TOS (Top Of Stack).</li><li> Perform TOS += b. This succeeds if TOS refers to a mutable object.</li><li> Assign s[a] = TOS. This fails if s is immutable.</li></ol><h3 id="list-sort-and-sorted"><a href="#list-sort-and-sorted" class="headerlink" title="list.sort and sorted"></a>list.sort and sorted</h3><p>list.sort: in-place, return None</p><p>sorted: create a copy</p><p>Two optional arguments:</p><p><code>reverse</code>: <code>key</code>:</p><h2 id="Managing-Ordered-Sequences-with-bisect"><a href="#Managing-Ordered-Sequences-with-bisect" class="headerlink" title="Managing Ordered Sequences with bisect"></a>Managing Ordered Sequences with bisect</h2><p>bisect and insort.</p><p>bisect is alias for bisect_right.</p><p>The element equal to the found value, will be inserted on the right side.</p><p>bisect_left insert the new to the left.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> bisect</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">HAYSTACK = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">15</span>, <span class="number">20</span>, <span class="number">21</span>, <span class="number">23</span>, <span class="number">23</span>, <span class="number">26</span>, <span class="number">29</span>, <span class="number">30</span>]</span><br><span class="line">NEEDLES = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">22</span>, <span class="number">23</span>, <span class="number">29</span>, <span class="number">30</span>, <span class="number">31</span>]</span><br><span class="line">ROW_FMT = <span class="string">&#x27;&#123;0:2d&#125; @ &#123;1:2d&#125;    &#123;2&#125;&#123;0:&lt;2d&#125;&#x27;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demo</span>(<span class="params">bisect_fn</span>):</span></span><br><span class="line">  <span class="keyword">for</span> needle <span class="keyword">in</span> <span class="built_in">reversed</span>(NEEDLES):</span><br><span class="line">    position = bisect_fn(HAYSTACK, needle)</span><br><span class="line">    offset = position * <span class="string">&#x27;  |&#x27;</span></span><br><span class="line">    print(ROW_FMT.<span class="built_in">format</span>(needle, position, offset))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">bisect_fn = bisect.bisect</span><br><span class="line">print(<span class="string">&#x27;haystack -&gt;&#x27;</span>, <span class="string">&#x27; &#x27;</span>.join(<span class="string">&#x27;%2d&#x27;</span> % n <span class="keyword">for</span> n <span class="keyword">in</span> HAYSTACK))</span><br><span class="line">demo(bisect_fn)</span><br></pre></td></tr></table></figure><pre><code>haystack -&gt;  1  4  5  6  8 12 15 20 21 23 23 26 29 3031 @ 14      |  |  |  |  |  |  |  |  |  |  |  |  |  |3130 @ 14      |  |  |  |  |  |  |  |  |  |  |  |  |  |3029 @ 13      |  |  |  |  |  |  |  |  |  |  |  |  |2923 @ 11      |  |  |  |  |  |  |  |  |  |  |2322 @  9      |  |  |  |  |  |  |  |  |2210 @  5      |  |  |  |  |10 8 @  5      |  |  |  |  |8  5 @  3      |  |  |5  2 @  1      |2  1 @  1      |1  0 @  0    0</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bisect_fn = bisect.bisect_left</span><br><span class="line">print(<span class="string">&#x27;haystack -&gt;&#x27;</span>, <span class="string">&#x27; &#x27;</span>.join(<span class="string">&#x27;%2d&#x27;</span> % n <span class="keyword">for</span> n <span class="keyword">in</span> HAYSTACK))</span><br><span class="line">demo(bisect_fn)</span><br></pre></td></tr></table></figure><pre><code>haystack -&gt;  1  4  5  6  8 12 15 20 21 23 23 26 29 3031 @ 14      |  |  |  |  |  |  |  |  |  |  |  |  |  |3130 @ 13      |  |  |  |  |  |  |  |  |  |  |  |  |3029 @ 12      |  |  |  |  |  |  |  |  |  |  |  |2923 @  9      |  |  |  |  |  |  |  |  |2322 @  9      |  |  |  |  |  |  |  |  |2210 @  5      |  |  |  |  |10 8 @  4      |  |  |  |8  5 @  2      |  |5  2 @  1      |2  1 @  0    1  0 @  0    0</code></pre><p>insort keep the order and insert new element.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> bisect</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">SIZE = <span class="number">7</span></span><br><span class="line">random.seed(<span class="number">1729</span>)</span><br><span class="line"></span><br><span class="line">my_list = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(SIZE):</span><br><span class="line">  new_item = random.randrange(SIZE*<span class="number">2</span>)</span><br><span class="line">  bisect.insort(my_list, new_item)</span><br><span class="line">  print(<span class="string">&#x27;%2d -&gt;&#x27;</span> % new_item, my_list)</span><br></pre></td></tr></table></figure><pre><code>10 -&gt; [10] 0 -&gt; [0, 10] 6 -&gt; [0, 6, 10] 8 -&gt; [0, 6, 8, 10] 7 -&gt; [0, 6, 7, 8, 10] 2 -&gt; [0, 2, 6, 7, 8, 10]10 -&gt; [0, 2, 6, 7, 8, 10, 10]</code></pre><h2 id="When-a-List-is-Not-the-Answer"><a href="#When-a-List-is-Not-the-Answer" class="headerlink" title="When a List is Not the Answer"></a>When a List is Not the Answer</h2><p>10 million floating-point values: <code>array</code> is more efficient</p><p>removing and adding items fro mthe ends of a list: <code>deque</code> works faster</p><p>a lot of containment checks: <code>set</code> are optimized for fast membership checking</p><h3 id="Arrays"><a href="#Arrays" class="headerlink" title="Arrays"></a>Arrays</h3><p>If the list will only contain numbers, an <code>array.array</code> is more efficient than a list.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> array <span class="keyword">import</span> array</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> random</span><br><span class="line">floats = array(<span class="string">&#x27;d&#x27;</span>, (random() <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>**<span class="number">7</span>)))</span><br><span class="line">floats[-<span class="number">1</span>]</span><br></pre></td></tr></table></figure><pre><code>0.1288579230853678</code></pre><h3 id="Deques"><a href="#Deques" class="headerlink" title="Deques"></a>Deques</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line">dq = deque(<span class="built_in">range</span>(<span class="number">10</span>), maxlen=<span class="number">10</span>)</span><br><span class="line">dq</span><br></pre></td></tr></table></figure><pre><code>deque([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], maxlen=10)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dq.rotate(<span class="number">3</span>)</span><br><span class="line">dq</span><br></pre></td></tr></table></figure><pre><code>deque([7, 8, 9, 0, 1, 2, 3, 4, 5, 6], maxlen=10)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dq.rotate(-<span class="number">4</span>)</span><br><span class="line">dq</span><br></pre></td></tr></table></figure><pre><code>deque([1, 2, 3, 4, 5, 6, 7, 8, 9, 0], maxlen=10)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dq.appendleft(-<span class="number">1</span>)</span><br><span class="line">dq</span><br></pre></td></tr></table></figure><pre><code>deque([-1, 1, 2, 3, 4, 5, 6, 7, 8, 9], maxlen=10)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dq.extend([<span class="number">11</span>, <span class="number">12</span>, <span class="number">33</span>])</span><br><span class="line">dq</span><br></pre></td></tr></table></figure><pre><code>deque([3, 4, 5, 6, 7, 8, 9, 11, 12, 33], maxlen=10)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dq.extendleft([<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>])</span><br><span class="line">dq</span><br></pre></td></tr></table></figure><pre><code>deque([40, 30, 20, 10, 3, 4, 5, 6, 7, 8], maxlen=10)</code></pre><p>Other Queues:</p><p><code>queue</code>: thread-safe</p><p><code>multiprocessing</code>: its own bounded Queue</p><p><code>asyncio</code>: Queue, LifoQUeue, PriorityQueue</p><p><code>heapq</code>: heappop, heappush</p>]]></content>
      
      
      <categories>
          
          <category> Book Notes </category>
          
          <category> Fluent Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue with Bootstrap</title>
      <link href="/notes-blog/2018/06/13/vue-with-bootstrap/"/>
      <url>/notes-blog/2018/06/13/vue-with-bootstrap/</url>
      
        <content type="html"><![CDATA[<p>Here is how to import boostrap in Vue.</p><h2 id="create-the-app"><a href="#create-the-app" class="headerlink" title="create the app"></a>create the app</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack app</span><br><span class="line">cd app</span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><h2 id="install-jquery-popper-and-boostrap"><a href="#install-jquery-popper-and-boostrap" class="headerlink" title="install jquery, popper and boostrap"></a>install jquery, popper and boostrap</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install jquery popper.js bootstrap --save</span><br></pre></td></tr></table></figure><h2 id="webpack"><a href="#webpack" class="headerlink" title="webpack"></a>webpack</h2><p>Edit in file <code>build/webpack.base.conf.js</code></p><figure class="highlight js"><figcaption><span>webpack.base.conf.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry: &#123;&#125;,</span><br><span class="line">    output: &#123;&#125;,</span><br><span class="line">    resolve: &#123;&#125;,</span><br><span class="line">    <span class="built_in">module</span>: &#123;&#125;,</span><br><span class="line"></span><br><span class="line">    plugins: [<span class="keyword">new</span> webpack.ProvidePlugin(&#123;</span><br><span class="line">        jQuery: <span class="string">'jquery'</span>,</span><br><span class="line">        $: <span class="string">'jquery'</span>,</span><br><span class="line">        jquery: <span class="string">'jquery'</span></span><br><span class="line">    &#125;)]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="import-in-main-js"><a href="#import-in-main-js" class="headerlink" title="import in main.js"></a>import in main.js</h2><figure class="highlight js"><figcaption><span>main.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>(<span class="string">'bootstrap'</span>)</span><br><span class="line"><span class="built_in">require</span>(<span class="string">'../node_modules/bootstrap/dist/css/bootstrap.min.css'</span>)</span><br></pre></td></tr></table></figure><p>Try the navbar in the app. It should work.</p><h2 id="how-to-import-a-third-party-library"><a href="#how-to-import-a-third-party-library" class="headerlink" title="how to import a third party library"></a>how to import a third party library</h2><p>Take axios as an example</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install axios --save</span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>main.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br><span class="line"><span class="built_in">Object</span>.definePrototype(Vue.prototype, <span class="string">'$axios'</span>, &#123; <span class="attr">value</span>: axios &#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> posts </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tools in shell</title>
      <link href="/notes-blog/2018/04/30/tools-in-shell/"/>
      <url>/notes-blog/2018/04/30/tools-in-shell/</url>
      
        <content type="html"><![CDATA[<h2 id="zsh"><a href="#zsh" class="headerlink" title="zsh"></a>zsh</h2><p>oh-my-zsh</p><h2 id="homebrew"><a href="#homebrew" class="headerlink" title="homebrew"></a>homebrew</h2><h2 id="cheat"><a href="#cheat" class="headerlink" title="cheat"></a>cheat</h2><h2 id="Ag"><a href="#Ag" class="headerlink" title="Ag"></a>Ag</h2><h2 id="fzf"><a href="#fzf" class="headerlink" title="fzf"></a>fzf</h2><h2 id="htop-or-vtop"><a href="#htop-or-vtop" class="headerlink" title="htop or vtop"></a>htop or vtop</h2><h2 id="tmux"><a href="#tmux" class="headerlink" title="tmux"></a>tmux</h2><p>see .tmux.conf</p><h3 id="Plugins"><a href="#Plugins" class="headerlink" title="Plugins"></a>Plugins</h3><ul><li>tpm</li><li>tmux-resurrect</li><li>tmux-sensible</li><li>tmux-sidebar</li></ul><h2 id="Vim"><a href="#Vim" class="headerlink" title="Vim"></a>Vim</h2><ul><li>the ultimate vimrc<h3 id="Plugins-1"><a href="#Plugins-1" class="headerlink" title="Plugins"></a>Plugins</h3></li><li>fzf</li><li>Nerdtree</li><li>tagbar</li><li>vim-airline</li></ul><h2 id="Dotfiles"><a href="#Dotfiles" class="headerlink" title="Dotfiles"></a>Dotfiles</h2><p>How to backup your dotfiles</p><p>.zshrc<br>.vimrc<br>.tmux.conf</p>]]></content>
      
      
      <categories>
          
          <category> posts </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Quick Notes</title>
      <link href="/notes-blog/2017/07/21/quick-notes/"/>
      <url>/notes-blog/2017/07/21/quick-notes/</url>
      
        <content type="html"><![CDATA[<h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><h3 id="How-to-rebase-your-branch"><a href="#How-to-rebase-your-branch" class="headerlink" title="How to rebase your branch"></a>How to rebase your branch</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout branchname</span><br><span class="line">git rebase master</span><br></pre></td></tr></table></figure><h3 id="Change-local-user-name"><a href="#Change-local-user-name" class="headerlink" title="Change local user name"></a>Change local user name</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config user.name &quot;Your name&quot;</span><br><span class="line">git config user.email &quot;Your email&quot;</span><br></pre></td></tr></table></figure><h3 id="Synchronise-git-branch-with-master"><a href="#Synchronise-git-branch-with-master" class="headerlink" title="Synchronise git branch with master"></a>Synchronise git branch with master</h3><p><a href="https://www.atlassian.com/git/articles/git-forks-and-upstreams" target="_blank" rel="noopener">Git Forks And Upstreams</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git checkout branchname</span><br><span class="line"># some work and some commits</span><br><span class="line"># some time passes</span><br><span class="line">git fetch upstream</span><br><span class="line">git rebase upstream&#x2F;master</span><br></pre></td></tr></table></figure><h3 id="Sychronise-git-master"><a href="#Sychronise-git-master" class="headerlink" title="Sychronise git master"></a>Sychronise git master</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git checkout master</span><br><span class="line">git fetch upstream</span><br><span class="line">git merge upstream&#x2F;master (or git rebase upstream&#x2F;master)</span><br></pre></td></tr></table></figure><h3 id="Delete-the-commit-on-remote-github"><a href="#Delete-the-commit-on-remote-github" class="headerlink" title="Delete the commit on remote github"></a>Delete the commit on remote github</h3><p><a href="https://stackoverflow.com/questions/448919/how-can-i-remove-a-commit-on-github" target="_blank" rel="noopener">See here</a></p><h4 id="First-remove-the-last-commit"><a href="#First-remove-the-last-commit" class="headerlink" title="First remove the last commit"></a>First remove the last commit</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rebase -i HEAD~2 ( Or use the option in IDE )</span><br></pre></td></tr></table></figure><h4 id="Force-push"><a href="#Force-push" class="headerlink" title="Force push"></a>Force push</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin +branchname --force</span><br></pre></td></tr></table></figure><h3 id="Worktree"><a href="#Worktree" class="headerlink" title="Worktree"></a>Worktree</h3><p>It is useful when you want to push a folder to a different branch.<br>For example, push public/ to gh-pages</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git worktree add -B gh-pages public upstream&#x2F;gh-pages</span><br></pre></td></tr></table></figure><h2 id="Network"><a href="#Network" class="headerlink" title="Network"></a>Network</h2><h3 id="check-port-being-forwarded"><a href="#check-port-being-forwarded" class="headerlink" title="check port being forwarded"></a>check port being forwarded</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -tpln</span><br></pre></td></tr></table></figure><h3 id="ssh-without-password"><a href="#ssh-without-password" class="headerlink" title="ssh without password"></a>ssh without password</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa(with default config)</span><br><span class="line">ssh-copy-id root@172.100.51.192</span><br><span class="line">ssh root@ip.address</span><br></pre></td></tr></table></figure><h3 id="overwatch-tcp-call"><a href="#overwatch-tcp-call" class="headerlink" title="overwatch tcp call"></a>overwatch tcp call</h3><p>Tool: tcpdump</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcpdump -i vmgmt port http and dst www.heise.de</span><br></pre></td></tr></table></figure><h3 id="download-from-remote-host"><a href="#download-from-remote-host" class="headerlink" title="download from remote host"></a>download from remote host</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp your_username@remotehost.edu:foobar.txt &#x2F;local&#x2F;dir</span><br></pre></td></tr></table></figure><h2 id="System"><a href="#System" class="headerlink" title="System"></a>System</h2><h3 id="unmount-busy-device"><a href="#unmount-busy-device" class="headerlink" title="unmount busy device"></a>unmount busy device</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount -l &#x2F;path&#x2F;to&#x2F;busy-device</span><br></pre></td></tr></table></figure><h3 id="unmount-busy-nfs"><a href="#unmount-busy-nfs" class="headerlink" title="unmount busy nfs"></a>unmount busy nfs</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount -f &#x2F;path&#x2F;to&#x2F;busy-network-file-system</span><br></pre></td></tr></table></figure><h3 id="write-random-data-to-file"><a href="#write-random-data-to-file" class="headerlink" title="write random data to file"></a>write random data to file</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dd if&#x3D;&#x2F;dev&#x2F;urandom of&#x3D;sample.txt bs&#x3D;1G count&#x3D;1</span><br><span class="line">dd if&#x3D;&#x2F;dev&#x2F;urandom of&#x3D;sample.txt bs&#x3D;64M count&#x3D;16</span><br></pre></td></tr></table></figure><h3 id="firewall"><a href="#firewall" class="headerlink" title="firewall"></a>firewall</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;etc&#x2F;init.d&#x2F;firewall start</span><br><span class="line">&#x2F;etc&#x2F;init.d&#x2F;firewall stop</span><br></pre></td></tr></table></figure><h2 id="Database"><a href="#Database" class="headerlink" title="Database"></a>Database</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br><span class="line">GRANT ALL ON &#96;DATABASE&#96;.* TO &#39;user&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;password&#39;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> posts </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Server Configuration Notes</title>
      <link href="/notes-blog/2017/07/13/Notes-In-the-Shell/"/>
      <url>/notes-blog/2017/07/13/Notes-In-the-Shell/</url>
      
        <content type="html"><![CDATA[<h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><h3 id="installation"><a href="#installation" class="headerlink" title="installation"></a>installation</h3><p><a href="https://docs.docker.com/engine/installation/linux/docker-ce/ubuntu" target="_blank" rel="noopener">Official Website</a></p><h3 id="add-docker-group"><a href="#add-docker-group" class="headerlink" title="add docker group"></a>add docker group</h3><p><code>sudo groupadd docker</code></p><p><code>sudo usermod -aG docker $USER</code></p><p>Try to run: <code>docker run hello-world</code></p><h3 id="build-a-image"><a href="#build-a-image" class="headerlink" title="build a image"></a>build a image</h3><p><code>docker build -t logsearcherbackend .</code></p><h3 id="run-a-container"><a href="#run-a-container" class="headerlink" title="run a container"></a>run a container</h3><p><code>docker run -d -p 2223:2223 logsearcherbackend</code></p><h2 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h2><h3 id="installation-1"><a href="#installation-1" class="headerlink" title="installation"></a>installation</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install mysql-server</span><br><span class="line">sudo mysql_secure_installation</span><br><span class="line">systemctl status mysql.service</span><br><span class="line">mysqladmin -p -u root version</span><br></pre></td></tr></table></figure><h3 id="commands"><a href="#commands" class="headerlink" title="commands"></a>commands</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use logsearcher;</span><br><span class="line">mysql&gt; show tables;</span><br></pre></td></tr></table></figure><h2 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install php php-mbstring php-xml php-mysql php7.0-fpm composer unzip</span><br></pre></td></tr></table></figure><h2 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h2><p>Check this <a href="https://www.digitalocean.com/community/tutorials/how-to-deploy-a-laravel-application-with-nginx-on-ubuntu-16-04" target="_blank" rel="noopener">Introduction</a>.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nginx</span><br><span class="line"></span><br><span class="line">systemctl start nginx</span><br><span class="line">systemctl stop nginx</span><br><span class="line">systemctl restart nginx</span><br><span class="line"></span><br><span class="line">sudo chown yzhang:yzhang &#x2F;var&#x2F;www&#x2F;html&#x2F;quickstart</span><br><span class="line"></span><br><span class="line">sudo chgrp -R www-data storage bootstrap&#x2F;cache</span><br><span class="line"></span><br><span class="line">sudo chmod -R ug+rwx storage bootstrap&#x2F;cache</span><br><span class="line"></span><br><span class="line"># or use sudo chown -R 777 www-data &#x2F;var&#x2F;www&#x2F;html&#x2F;quickstart</span><br></pre></td></tr></table></figure><figure class="highlight php"><figcaption><span>/etc/nginx/conf.d/logsearcher.com</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen <span class="number">8080</span>;</span><br><span class="line">    listen [::]:<span class="number">8080</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># SSL configuration</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># listen 443 ssl default_server;</span></span><br><span class="line"><span class="comment"># listen [::]:443 ssl default_server;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># <span class="doctag">Note:</span> You should disable gzip for SSL traffic.</span></span><br><span class="line"><span class="comment"># See: https://bugs.debian.org/773332</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Read up on ssl_ciphers to ensure a secure configuration.</span></span><br><span class="line"><span class="comment"># See: https://bugs.debian.org/765782</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Self signed certs generated by the ssl-cert package</span></span><br><span class="line"><span class="comment"># Don't use them in a production server!</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># include snippets/snakeoil.conf;</span></span><br><span class="line"></span><br><span class="line">    root /<span class="keyword">var</span>/www/html/logsearcher/<span class="keyword">public</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add index.php to the list if you are using PHP</span></span><br><span class="line">    index index.php index.html index.htm index.nginx-debian.html;</span><br><span class="line"></span><br><span class="line">    server_name logsearcher.com www.logsearcher.com;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line"><span class="comment"># First attempt to serve request as file, then</span></span><br><span class="line"><span class="comment"># as directory, then fall back to displaying a 404.</span></span><br><span class="line">        try_files $uri $uri/ /index.php;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        <span class="keyword">include</span> snippets/fastcgi-php.conf;</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#       # With php7.0-cgi alone:</span></span><br><span class="line"><span class="comment">#       fastcgi_pass 127.0.0.1:9000;</span></span><br><span class="line"><span class="comment">#       # With php7.0-fpm:</span></span><br><span class="line">        fastcgi_pass unix:/run/php/php7<span class="number">.0</span>-fpm.sock;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># deny access to .htaccess files, if Apache's document root</span></span><br><span class="line"><span class="comment"># concurs with nginx's one</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#location ~ /\.ht &#123;</span></span><br><span class="line"><span class="comment">#       deny all;</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="composer"><a href="#composer" class="headerlink" title="composer"></a>composer</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">php -r <span class="string">"copy('https://getcomposer.org/installer', 'composer-setup.php');"</span></span><br><span class="line">php -r <span class="string">"if (hash_file('SHA384', 'composer-setup.php') === '669656bab3166a7aff8a7506b8cb2d1c292f042046c5a994c43155c0be6190fa0355160742ab2e1c88d40d5be660b410') &#123; echo 'Installer verified'; &#125; else &#123; echo 'Installer corrupt'; unlink('composer-setup.php'); &#125; echo PHP_EOL;"</span></span><br><span class="line">php composer-setup.php</span><br><span class="line">php -r <span class="string">"unlink('composer-setup.php');"</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mv composer.phar &#x2F;usr&#x2F;local&#x2F;bin&#x2F;composer</span><br></pre></td></tr></table></figure><figure class="highlight vim"><figcaption><span>.bashrc</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># <span class="keyword">for</span> mac</span><br><span class="line">export PATH=<span class="string">"$HOME/.composer/vendor/bin:$PATH"</span></span><br><span class="line"></span><br><span class="line"># <span class="keyword">for</span> ubuntu </span><br><span class="line">export PATH=<span class="string">"$HOME/.config/composer/vendor/bin:$PATH"</span></span><br></pre></td></tr></table></figure><h2 id="laravel"><a href="#laravel" class="headerlink" title="laravel"></a>laravel</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer global require laravel&#x2F;installer</span><br></pre></td></tr></table></figure><h3 id="setup-schedule-on-linux"><a href="#setup-schedule-on-linux" class="headerlink" title="setup schedule on linux"></a>setup schedule on linux</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br><span class="line">* * * * * php &#x2F;path-to-your-project&#x2F;artisan schedule:run &gt;&gt; &#x2F;dev&#x2F;null 2&gt;&amp;1</span><br></pre></td></tr></table></figure><h3 id="notice-the-timeout-of-php"><a href="#notice-the-timeout-of-php" class="headerlink" title="notice the timeout of php"></a>notice the timeout of php</h3><p>Problem of Guzzle for opening the stream. Later find out, it was the timeout of php socket.<br>Make sure you have always set the timeout enough for a long term synchro call.</p><h3 id="configure-the-env"><a href="#configure-the-env" class="headerlink" title="configure the .env"></a>configure the .env</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp .env.example .env</span><br></pre></td></tr></table></figure><p>Make sure to change following config:</p><ul><li>QUEUE_DRIVER</li><li>APP_ENV</li><li>APP_DEBUG</li><li>DB_DATABASE</li><li>DB_USERNAME</li><li>DB_PASSWORD</li></ul><h3 id="run-commands"><a href="#run-commands" class="headerlink" title="run commands"></a>run commands</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">composer install</span><br><span class="line">php artisan migrate</span><br></pre></td></tr></table></figure><h2 id="Vim"><a href="#Vim" class="headerlink" title="Vim"></a>Vim</h2><h3 id="install-awesome-vim"><a href="#install-awesome-vim" class="headerlink" title="install awesome vim"></a>install awesome vim</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone --depth&#x3D;1 https:&#x2F;&#x2F;github.com&#x2F;amix&#x2F;vimrc.git ~&#x2F;.vim_runtime</span><br><span class="line">sh ~&#x2F;.vim_runtime&#x2F;install_awesome_vimrc.sh</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> posts </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel with Vuejs</title>
      <link href="/notes-blog/2017/06/23/Laravel-with-Vuejs/"/>
      <url>/notes-blog/2017/06/23/Laravel-with-Vuejs/</url>
      
        <content type="html"><![CDATA[<h2 id="Laravel-Mix"><a href="#Laravel-Mix" class="headerlink" title="Laravel Mix"></a>Laravel Mix</h2><p>Use <code>laravel-mix</code> to integrate Vuejs with Laravel. See this <a href="https://laracasts.com/series/learn-vue-2-step-by-step/episodes/23" target="_blank" rel="noopener">tutorial</a> for reference.</p><h3 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev laravel-mix</span><br></pre></td></tr></table></figure><p>You can also run <code>npm install</code> in the working dir of laravel app</p><h3 id="Vue-component"><a href="#Vue-component" class="headerlink" title="Vue component"></a>Vue component</h3><p>By default, you have already an example in the folder <code>resources/assets</code></p><figure class="highlight js"><figcaption><span>resources/assets/js/app.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">require</span>(<span class="string">'./bootstrap'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.Vue = <span class="built_in">require</span>(<span class="string">'vue'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Next, we will create a fresh Vue application instance and attach it to</span></span><br><span class="line"><span class="comment"> * the page. Then, you may begin adding components to this application</span></span><br><span class="line"><span class="comment"> * or customize the JavaScript scaffolding to fit your unique needs.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Example <span class="keyword">from</span> <span class="string">'./components/Example'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// or you can write</span></span><br><span class="line"><span class="comment">//Vue.component('example', require('./components/Example.vue'));</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">'#app'</span>,</span><br><span class="line">    components: &#123; Example &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight html"><figcaption><span>resources/assets/js/components/Example.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        I'm an example component!</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line">    mounted() &#123;</span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">'Component mounted.'</span>)</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Import-Vue-instance"><a href="#Import-Vue-instance" class="headerlink" title="Import Vue instance"></a>Import Vue instance</h3><p>Create an index page <code>index.blade.php</code></p><p>Import the javasript.</p><figure class="highlight html"><figcaption><span>resources/views/index.blade.php</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"csrf-token"</span> <span class="attr">content</span>=<span class="string">"&#123;&#123; csrf_token() &#125;&#125;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>log Searcher<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/css/app.css"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Home</span>&gt;</span><span class="tag">&lt;/<span class="name">Home</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/js/app.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Create the route</p><figure class="highlight php"><figcaption><span>web.php</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> view(<span class="string">'index'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Visit myapp.dev. You got the vue app integrated.</p><h3 id="Configure-Mix"><a href="#Configure-Mix" class="headerlink" title="Configure Mix"></a>Configure Mix</h3><p>Configure the file <code>webpack.mix.js</code></p><figure class="highlight js"><figcaption><span>webpack.mix.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> mix = <span class="built_in">require</span>(<span class="string">'laravel-mix'</span>);</span><br><span class="line"></span><br><span class="line">mix.js(<span class="string">'resources/assets/js/app.js'</span>, <span class="string">'public/js'</span>)</span><br><span class="line">   .sass(<span class="string">'resources/assets/sass/app.scss'</span>, <span class="string">'public/css'</span>);</span><br></pre></td></tr></table></figure><p>You can also change the webpack configuration by copying the file<br><code>node_modules/laravel-mix/setup/webpack.config.js</code> to working dir and customize it.</p><p>Change the entry in the package.json from</p><figure class="highlight"><figcaption><span>package.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"development": "cross-env NODE_ENV=development node_modules/webpack/bin/webpack.js --progress --hide-modules --config=node_modules/laravel-mix/setup/webpack.config.js",</span><br></pre></td></tr></table></figure><p>to</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;development&quot;: &quot;cross-env NODE_ENV&#x3D;development node_modules&#x2F;webpack&#x2F;bin&#x2F;webpack.js --progress --hide-modules --config&#x3D;jebpack.config.js&quot;,</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> posts </category>
          
      </categories>
      
      
        <tags>
            
            <tag> laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel simple app with database</title>
      <link href="/notes-blog/2017/06/22/lavarel-simple-app-with-database/"/>
      <url>/notes-blog/2017/06/22/lavarel-simple-app-with-database/</url>
      
        <content type="html"><![CDATA[<h2 id="Create-new-app"><a href="#Create-new-app" class="headerlink" title="Create new app"></a>Create new app</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">laravel new myapp</span><br></pre></td></tr></table></figure><h2 id="Tasks-without-datebase"><a href="#Tasks-without-datebase" class="headerlink" title="Tasks without datebase"></a>Tasks without datebase</h2><figure class="highlight php"><figcaption><span>web.php</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'/tasks'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    $tasks = [</span><br><span class="line">        <span class="string">"Go to store"</span>,</span><br><span class="line">        <span class="string">"Finish the blog"</span>,</span><br><span class="line">        <span class="string">"Clean the house'</span></span><br><span class="line"><span class="string">    ];</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    return view('welcome', compact('tasks'));</span></span><br><span class="line"><span class="string">    /*</span></span><br><span class="line"><span class="string">    or other variations for the last line</span></span><br><span class="line"><span class="string">    return view('welcome')-&gt;with('tasks', $tasks);</span></span><br><span class="line"><span class="string">    return view('welcome', ['tasks' =&gt; $tasks]);</span></span><br><span class="line"><span class="string">    */</span></span><br><span class="line"><span class="string">&#125;);</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><figcaption><span>welcome.blade.php</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"content-type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        @foreach ($tasks as $task)</span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; $task &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        @endforeach</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>visit myapp.dev</p><h2 id="Tasks-with-database"><a href="#Tasks-with-database" class="headerlink" title="Tasks with database"></a>Tasks with database</h2><figure class="highlight bash"><figcaption><span>.env</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DB_CONNECTION=mysql</span><br><span class="line">DB_HOST=127.0.0.1</span><br><span class="line">DB_PORT=3306</span><br><span class="line">DB_DATABASE=blog</span><br><span class="line">DB_USERNAME=root</span><br><span class="line">DB_PASSWORD=</span><br></pre></td></tr></table></figure><p>Create some tasks with <a href="https://www.sequelpro.com" target="_blank" rel="noopener">Sequal Pro</a>, or whatever you like.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:migration create_tasks_table --create=tasks</span><br></pre></td></tr></table></figure><figure class="highlight php"><figcaption><span>database/migrations/2017_06_21_140553_create_tasks_table.php</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CreateTasksTable</span> <span class="keyword">extends</span> <span class="title">Migration</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">up</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Schema::create(<span class="string">'tasks'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(Blueprint $table)</span> </span>&#123;</span><br><span class="line">                $table-&gt;increments(<span class="string">'id'</span>);</span><br><span class="line">                $table-&gt;text(<span class="string">'body'</span>);</span><br><span class="line">                $table-&gt;timestamps();</span><br><span class="line">                &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">down</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Schema::dropIfExists(<span class="string">'tasks'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan migrate</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'/tasks'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    $tasks = DB::table(<span class="string">'tasks'</span>)-&gt;get();</span><br><span class="line">    <span class="keyword">return</span> view(<span class="string">'welcome'</span>, compact(<span class="string">'tasks'</span>));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="Database-use-Eloquent"><a href="#Database-use-Eloquent" class="headerlink" title="Database use Eloquent"></a>Database use Eloquent</h2><pre><code>php artisan make:model Task</code></pre><p>You can reference the task model in the terminal with tinker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan tinker</span><br></pre></td></tr></table></figure><pre><code>&gt;&gt;&gt; Task::all()&gt;&gt;&gt; App\Task::pluck(&apos;body&apos;).first()&gt;&gt;&gt; $task = new App\Task&gt;&gt;&gt; $task-&gt;body = &apos;Go to the market&apos;&gt;&gt;&gt; $task-&gt;save()</code></pre><figure class="highlight php"><figcaption><span>web.php</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'/tasks'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    $tasks = App\Task::all();</span><br><span class="line">    <span class="keyword">return</span> view(<span class="string">'welcome'</span>, compact(<span class="string">'tasks'</span>));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> posts </category>
          
      </categories>
      
      
        <tags>
            
            <tag> laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel Installation</title>
      <link href="/notes-blog/2017/06/21/lavarel-installation/"/>
      <url>/notes-blog/2017/06/21/lavarel-installation/</url>
      
        <content type="html"><![CDATA[<h2 id="installation"><a href="#installation" class="headerlink" title="installation"></a>installation</h2><p>Several packages should be installed.</p><ul><li>php 7.1</li><li>composer</li><li>laravel</li><li>valet</li><li>mysql</li></ul><h3 id="php7-1"><a href="#php7-1" class="headerlink" title="php7.1"></a>php7.1</h3><pre><code>brew install homebrew/php/php71</code></pre><h3 id="composer"><a href="#composer" class="headerlink" title="composer"></a>composer</h3><p>copy following code into terminal and execute</p><pre><code>php -r &quot;copy(&apos;https://getcomposer.org/installer&apos;, &apos;composer-setup.php&apos;);&quot;php -r &quot;if (hash_file(&apos;SHA384&apos;, &apos;composer-setup.php&apos;) === &apos;669656bab3166a7aff8a7506b8cb2d1c292f042046c5a994c43155c0be6190fa0355160742ab2e1c88d40d5be660b410&apos;) { echo &apos;Installer verified&apos;; } else { echo &apos;Installer corrupt&apos;; unlink(&apos;composer-setup.php&apos;); } echo PHP_EOL;&quot;php composer-setup.phpphp -r &quot;unlink(&apos;composer-setup.php&apos;);&quot;</code></pre><p>move the composer.phar into your PATH</p><pre><code>mv composer.phar /usr/local/bin/composer</code></pre><p>add the composer vendor into your PATH</p><pre><code>export PATH=&quot;$HOME/.composer/vendor/bin:$PATH&quot;</code></pre><h3 id="laravel"><a href="#laravel" class="headerlink" title="laravel"></a>laravel</h3><pre><code>composer global require laravel/installer</code></pre><h3 id="valet"><a href="#valet" class="headerlink" title="valet"></a>valet</h3><pre><code>composer global require laravel/valetvalet install</code></pre><p>Than you can ping foo.dev<br>    ping foo.dev</p><h3 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h3><pre><code>brew install mysqlbrew service start mysql</code></pre><h2 id="Create-new-project"><a href="#Create-new-project" class="headerlink" title="Create new project"></a>Create new project</h2><pre><code>cd ~/codevalet parklaravel new anything</code></pre><p>Than you can visit anything.dev in your browser.</p><p>Notes: if the website only shows you ‘it works!’, try followings:</p><pre><code>sudo apachectl stopvalet restart</code></pre><p>You can secure the website by</p><pre><code>cd anythingvalet secure</code></pre>]]></content>
      
      
      <categories>
          
          <category> posts </category>
          
      </categories>
      
      
        <tags>
            
            <tag> laravel </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
